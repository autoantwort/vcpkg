name: Add version infos

on:
  push:
    branches:
      - 'version-staging'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          # fetch-depth 50 tries to ensure we capture the whole history of the branch
          fetch-depth: 0

      - name: bootstrap
        run: ./bootstrap-vcpkg.sh

      - name: Get changes
        run: |
          git config user.email github-actions
          git config user.name github-actions@github.com

          git --version

          git status

          git checkout master
          git status
          git checkout -
          unset VCPKG_ROOT

          git --no-pager diff --name-only --merge-base master HEAD -- ports | grep -o '^ports/[^/]\+' | sort -u > .changed-ports
          
          # git --no-pager diff --name-only --merge-base master HEAD -- ports | grep -o -E '^ports/[^/]\+'
          # git --no-pager diff --name-only --merge-base master HEAD -- ports | grep -o -E '^ports/[^/]+'
          # git --no-pager diff --name-only --merge-base master HEAD -- ports | grep -o  '^ports/[^/]+'
          # git --no-pager diff --name-only --merge-base master HEAD -- ports | grep -o  '^ports/[^/]\+' 

      - uses: actions/github-script@v6
        with:
          script: |
            const { promises: fs } = require('fs');
            const changed_ports_content = (await fs.readFile('.changed-ports', 'utf8')).trim()
            console.log("File content:", changed_ports_content);
            if (changed_ports_content === "") {
              await fs.rm('.changed-ports')
              return; // nothing to do, no port change
            }
            const changed_ports = changed_ports_content.split('\n');
            const baseline = JSON.parse(await fs.readFile('versions/baseline.json', 'utf8')).default;
            console.log(changed_ports);
            console.log("File: ##", await fs.readFile('.changed-ports', 'utf8'), "##");
            for (let changed_port of changed_ports) {
              changed_port = changed_port.split('/')[1];
              const file_name = `ports/${changed_port}/vcpkg.json`;
              let manifest = JSON.parse(await fs.readFile(file_name, 'utf8'));
              let version = manifest['version'] || manifest['version-date'] || manifest['version-semver'] || manifest['version-string']
              console.log(manifest)
              console.log(baseline[changed_port], " : ", manifest["port-version"], " : ", version )
              if (baseline[changed_port] === undefined) {
                delete manifest["port-version"]; // new port
                console.log("new port")
              } else if (baseline[changed_port].baseline !== version) {
                delete manifest["port-version"]; // new version
                console.log("new version")
              } else {
                manifest["port-version"] = baseline[changed_port]['port-version'] + 1; // new version
                console.log("increase version")
              }
              await fs.writeFile(file_name, JSON.stringify(manifest))
            }

      - name: Format, add versions and commit
        run: |
          unset VCPKG_ROOT
          if [ -f ".changed-ports" ];then
            ./vcpkg format-manifest --all
            git add ports
            git commit --amend --no-edit
            ./vcpkg x-add-version --all
            git add versions
            git commit --amend --no-edit
            git status
            git push -f
          fi
          git checkout master
          git merge --ff-only -
          git push -f
