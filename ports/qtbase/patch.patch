diff --git a/cmake/QtModuleHelpers.cmake b/cmake/QtModuleHelpers.cmake
index 090e1343b0..8e7ac01398 100644
--- a/cmake/QtModuleHelpers.cmake
+++ b/cmake/QtModuleHelpers.cmake
@@ -278,7 +278,7 @@ function(qt_internal_add_module target)
         # So we either write the generated files into the qtbase non-prefix build root, or the
         # module specific build root.
         qt_ensure_sync_qt()
-        set(syncqt_full_command "${HOST_PERL}" -w "${QT_SYNCQT}"
+        set(syncqt_full_command ${HOST_PERL} -w "${QT_SYNCQT}"
                                  -quiet
                                  -check-includes
                                  -module "${module_include_name}"
@@ -286,7 +286,16 @@ function(qt_internal_add_module target)
                                  -outdir "${QT_BUILD_DIR}"
                                  -builddir "${PROJECT_BINARY_DIR}"
                                  "${PROJECT_SOURCE_DIR}")
-        message(STATUS "Running syncqt for module: '${module_include_name}' ")
+        message(STATUS "Test1 ${HOST_PERL2}")
+        find_program(HOST_PERL2 "perl" DOC "Perl binary")
+        message(STATUS "Test2 ${HOST_PERL2}")
+        set(HOST_PERL "/usr/bin/perl")
+        message(STATUS "Test3 ${HOST_PERL}")
+        execute_process(COMMAND "${HOST_PERL}" "--version" RESULT_VARIABLE syncqt_ret)
+        if(NOT syncqt_ret EQUAL 0)
+            message(FATAL_ERROR "Failed to run ${HOST_PERL}, return code: ${syncqt_ret}")
+        endif()
+        message(STATUS "Running syncqt for module: '${module_include_name}' '${syncqt_full_command}'")
         execute_process(COMMAND ${syncqt_full_command} RESULT_VARIABLE syncqt_ret)
         if(NOT syncqt_ret EQUAL 0)
             message(FATAL_ERROR "Failed to run syncqt, return code: ${syncqt_ret}")
